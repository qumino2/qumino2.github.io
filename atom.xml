<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Data Science Journey]]></title>
  <link href="https://qumino2.github.io/atom.xml" rel="self"/>
  <link href="https://qumino2.github.io/"/>
  <updated>2020-01-05T21:54:58+08:00</updated>
  <id>https://qumino2.github.io/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://www.mweb.im/">MWeb</generator>
  
  <entry>
    <title type="html"><![CDATA[Weekly Goal / Review: 01/13 - 01/19 Jan 2020]]></title>
    <link href="https://qumino2.github.io/15782346719748.html"/>
    <updated>2020-01-05T22:31:11+08:00</updated>
    <id>https://qumino2.github.io/15782346719748.html</id>
    <content type="html"><![CDATA[
<h1 id="toc_0">Highlights</h1>

<h1 id="toc_1">Goals</h1>

<h1 id="toc_2">Focus habit</h1>

<h1 id="toc_3">Media and Events</h1>

<h3 id="toc_4">Events</h3>

<h3 id="toc_5">Books</h3>

<h3 id="toc_6">Movies</h3>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Weekly Goal / Review: 01/06 - 01/12 Jan 2020]]></title>
    <link href="https://qumino2.github.io/15782344169177.html"/>
    <updated>2020-01-05T22:26:56+08:00</updated>
    <id>https://qumino2.github.io/15782344169177.html</id>
    <content type="html"><![CDATA[
<h1 id="toc_0">Highlights</h1>

<h1 id="toc_1">Goals</h1>

<h1 id="toc_2">Focus habit</h1>

<h1 id="toc_3">Media and Events</h1>

<h3 id="toc_4">Events</h3>

<h3 id="toc_5">Books</h3>

<h3 id="toc_6">Movies</h3>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SQL Basics book notes and recall questions]]></title>
    <link href="https://qumino2.github.io/sql-basics-book-notes.html"/>
    <updated>2020-01-05T11:57:22+08:00</updated>
    <id>https://qumino2.github.io/sql-basics-book-notes.html</id>
    <content type="html"><![CDATA[
<ul>
<li>
<a href="#toc_0">Chapter 1 Database and SQL</a>
<ul>
<li>
<a href="#toc_1">Recall questions</a>
</li>
<li>
<a href="#toc_2">Three categories of SQL language</a>
</li>
<li>
<a href="#toc_3">Data type</a>
</li>
<li>
<a href="#toc_4">Set constraints</a>
</li>
<li>
<a href="#toc_5">Table definition update</a>
</li>
</ul>
</li>
<li>
<a href="#toc_6">Chapter 2 SQL Query Basics</a>
<ul>
<li>
<a href="#toc_7">Recall questions</a>
</li>
<li>
<a href="#toc_8">Query constant</a>
</li>
<li>
<a href="#toc_9">Remove duplicates</a>
</li>
<li>
<a href="#toc_10">Arithmetic and comparison operators</a>
</li>
<li>
<a href="#toc_11">logic operators (AND, OR, NOT)</a>
</li>
</ul>
</li>
<li>
<a href="#toc_12">Chapter 3 Aggregation and Sorting</a>
<ul>
<li>
<a href="#toc_13">Recall questions</a>
</li>
<li>
<a href="#toc_14">Aggregation functions</a>
</li>
</ul>
</li>
<li>
<a href="#toc_15">Chapter 4 Table Data Update</a>
<ul>
<li>
<a href="#toc_16">Recall questions</a>
</li>
<li>
<a href="#toc_17">INSERT</a>
</li>
<li>
<a href="#toc_18">INSERT ... SELECT</a>
</li>
<li>
<a href="#toc_19">DELETE (rows)</a>
</li>
<li>
<a href="#toc_20">UPDATE</a>
</li>
<li>
<a href="#toc_21">Transaction</a>
</li>
</ul>
</li>
<li>
<a href="#toc_22">Chapter 5 Complex Query</a>
<ul>
<li>
<a href="#toc_23">Recall questions</a>
</li>
<li>
<a href="#toc_24">View and View creation</a>
</li>
<li>
<a href="#toc_25">Scalar subquery</a>
</li>
<li>
<a href="#toc_26">A powerful example (Scalar subquery)</a>
</li>
<li>
<a href="#toc_27">Correlated Query</a>
</li>
</ul>
</li>
<li>
<a href="#toc_28">Chapter 6 Colorful Functions</a>
<ul>
<li>
<a href="#toc_29">Recall questions</a>
</li>
<li>
<a href="#toc_30">Categories of Functions</a>
</li>
<li>
<a href="#toc_31">Predicates (which returns boolean-like values)</a>
</li>
<li>
<a href="#toc_32">Use Case to transpose</a>
</li>
</ul>
</li>
<li>
<a href="#toc_33">Chapter 7 Set Operation</a>
<ul>
<li>
<a href="#toc_34">Recall questions</a>
</li>
<li>
<a href="#toc_35">Row direction join (axis = 1)</a>
</li>
<li>
<a href="#toc_36">Column direction join (axis = 0)</a>
</li>
</ul>
</li>
<li>
<a href="#toc_37">Chapter 8 Advanced Topics: Window Function &amp; Grouping Operator</a>
<ul>
<li>
<a href="#toc_38">Recall questions</a>
</li>
<li>
<a href="#toc_39">Categories of Window Function</a>
</li>
<li>
<a href="#toc_40">Features of Window Function</a>
</li>
<li>
<a href="#toc_41">Aggregation window function (attention!)</a>
</li>
<li>
<a href="#toc_42">Moving average (how to use Frame)</a>
</li>
<li>
<a href="#toc_43">Grouping operator</a>
</li>
</ul>
</li>
</ul>


<h1 id="toc_0">Chapter 1 Database and SQL</h1>

<h2 id="toc_1">Recall questions</h2>

<ol>
<li>How to rename a table?</li>
<li>How to add a new column to a table?</li>
<li>What&#39;s the difference between CHAR(n) and VARCHAR(n)?</li>
<li>How we categorize SQL language?</li>
</ol>

<h2 id="toc_2">Three categories of SQL language</h2>

<p>DDL (Data Definition Language)</p>

<ul>
<li>CREATE</li>
<li>DROP</li>
<li>ALTER</li>
</ul>

<p>DML (Data Manipulation Language)(90%)</p>

<ul>
<li>SELECT</li>
<li>INSERT</li>
<li>UPDATE</li>
<li>DELETE</li>
</ul>

<p>DCL (Data Control Language)</p>

<ul>
<li>COMMIT</li>
<li>ROLLBACK</li>
<li>GRANT</li>
<li>REVOKE</li>
</ul>

<h2 id="toc_3">Data type</h2>

<p>CHAR(n)</p>

<ul>
<li>the length is determined by n</li>
<li>e.g., when insert &#39;abc&#39; into CHAR(8), there will be 5 half-angle space stored after &#39;abc&#39;</li>
</ul>

<p>VARCHAR(n)</p>

<ul>
<li>the length is variable</li>
<li>e.g., when insert &#39;abc&#39; into VARCHAR(8), there will only be &#39;abc&#39; stored</li>
</ul>

<h2 id="toc_4">Set constraints</h2>

<p>NOT NULL</p>

<ul>
<li>if there is no input, error raises</li>
</ul>

<p>PRIMARY KEY(product_id)</p>

<ul>
<li>use primary key to select distinct rows</li>
</ul>

<h2 id="toc_5">Table definition update</h2>

<p>Add Column</p>

<ul>
<li>ALTER TABLE &lt; table name &gt; ADD COLUMN &lt; column definition &gt;;</li>
</ul>

<p>Rename Table</p>

<ul>
<li>ALTER TABLE Poduct RENAME TO Product;</li>
</ul>

<h1 id="toc_6">Chapter 2 SQL Query Basics</h1>

<h2 id="toc_7">Recall questions</h2>

<ol>
<li>Why we set NOT NULL constraints?</li>
<li>What tools we can use to deal with complex situations to calculate logic values?</li>
<li>How many logic values are there?</li>
</ol>

<h2 id="toc_8">Query constant</h2>

<p>example：</p>

<pre><code class="language-text">SELECT &#39;商品&#39; AS string, 38 AS number, &#39;2009-02-24&#39; AS date, 
        product_id, product_name 
FROM Product;
</code></pre>

<h2 id="toc_9">Remove duplicates</h2>

<p>Use DISTINCT</p>

<ul>
<li>NULL will be kept, treated as another category of data</li>
<li>Rows with multiple NULLs will be combined into one row</li>
</ul>

<h2 id="toc_10">Arithmetic and comparison operators</h2>

<p>Arithmetic NULL (attention!)</p>

<ul>
<li>NULL / 0 = NULL</li>
<li>NULL + 5 = NULL</li>
<li>all arithmetic involve NULL, the result will always be NULL</li>
</ul>

<p>Comparison NULL </p>

<ul>
<li>NULL &lt;&gt; 2800 (UNKNOWN, this is neither TRUE nor FALSE)</li>
<li>TURE, FALSE, UNKNOWN</li>
</ul>

<h2 id="toc_11">logic operators (AND, OR, NOT)</h2>

<p>Use Venn Digram and Truth Tables to deal with complex situations<br/>
<img src="media/15781966422187/15782025553934.jpg" alt="" style="width:441px;"/><br/>
<img src="media/15781966422187/15782024184478.jpg" alt="" style="width:250px;"/></p>

<p>AND(logic product), OR(logic sum)<br/>
<img src="media/15781966422187/15782031129808.jpg" alt="" style="width:270px;"/></p>

<p>Why set constraint NOT NULL<br/>
<img src="media/15781966422187/15782033197597.jpg" alt="" style="width:421px;"/></p>

<h1 id="toc_12">Chapter 3 Aggregation and Sorting</h1>

<h2 id="toc_13">Recall questions</h2>

<ol>
<li>What is the execution sequence of SQL?</li>
<li>Can you use (alias, numbers, aggregations not in select) in ORDER BY clause?</li>
<li>Which aggregation functions apply to all data type?</li>
<li>How to count all the non-null rows?</li>
</ol>

<h2 id="toc_14">Aggregation functions</h2>

<p>Aggregation means multiple rows input, one row output.</p>

<p>COUNT(parameter)</p>

<ul>
<li>COUNT(*) will include NULL rows, normally, other functions will only aggregate non-null values</li>
<li>COUNT(purchase_price) will exclude NULL rows</li>
<li>COUNT(DISTINCT parameter) to calculate the number of categories of the value.</li>
</ul>

<p>MAX/MIN &amp; SUM/AVG</p>

<ul>
<li>MAX/MIN apply to all data type</li>
<li>SUM/AVG apply to numeric data type</li>
<li>DISTINCT can be used in all aggregation functions, help to remove duplicated data</li>
</ul>

<p>Group By</p>

<ul>
<li>Different groups of data</li>
<li>Each group has one aggregation output</li>
<li>If NULL is included in aggregation key, it will still show the result
<img src="media/15781966422187/15782076308523.jpg" alt="" style="width:306px;"/></li>
</ul>

<p>Caveats</p>

<ul>
<li>Sequence of execution: </li>
</ul>

<p>FROM -&gt; WHERE(set row condition) -&gt; GROUP BY(set group condition) -&gt; HAVING -&gt; SELECT -&gt; ORDER BY</p>

<ul>
<li>You can only use aggregation in SELECT, HAVING, ORDER BY,  not WHERE</li>
<li>ORDER BY goes to the bottom and you can use alias (do not use numbers), because before you sort, the final table is ready.</li>
</ul>

<h1 id="toc_15">Chapter 4 Table Data Update</h1>

<h2 id="toc_16">Recall questions</h2>

<ol>
<li>How to update one column&#39;s data to NULL?</li>
<li>How to delete rows met certain conditions?</li>
<li>How to insert data from another table?</li>
</ol>

<h2 id="toc_17">INSERT</h2>

<p><img src="media/15781966422187/15782097353951.jpg" alt="" style="width:398px;"/></p>

<h2 id="toc_18">INSERT ... SELECT</h2>

<p><img src="media/15781966422187/15782101068950.jpg" alt="" style="width:422px;"/></p>

<h2 id="toc_19">DELETE (rows)</h2>

<ul>
<li>DELETE FROM &lt; table name &gt;; (keep table, delete all rows; use TRUNCATE &lt; table name &gt; is better.)</li>
<li>DELETE FROM &lt; table name &gt; WHERE &lt; conditions &gt;; (delete certain rows)</li>
</ul>

<h2 id="toc_20">UPDATE</h2>

<p><img src="media/15781966422187/15782107297075.jpg" alt="" style="width:408px;"/><br/>
Use NULL to update<br/>
<img src="media/15781966422187/15782108158574.jpg" alt="" style="width:436px;"/></p>

<h2 id="toc_21">Transaction</h2>

<ul>
<li>Atomicity</li>
<li>Consistency</li>
<li>Isolation</li>
<li>Durability</li>
</ul>

<h1 id="toc_22">Chapter 5 Complex Query</h1>

<h2 id="toc_23">Recall questions</h2>

<ol>
<li>When to use correlated subquery?</li>
<li>When to use scalar subquery?</li>
<li>When to create a View?</li>
<li>What is the difference between View and Table?</li>
</ol>

<h2 id="toc_24">View and View creation</h2>

<ul>
<li>View stores <code>Select clause</code>, not data</li>
<li>Should make often-use <code>Select clause</code> to View</li>
<li>Subquery is one-time View
<img src="media/15781966422187/15782129804591.jpg" alt="" style="width:426px;"/></li>
</ul>

<h2 id="toc_25">Scalar subquery</h2>

<ul>
<li>Return a single value</li>
<li>combine with comparison operators</li>
<li>Can be used anywhere you want to use constant or column name</li>
</ul>

<h2 id="toc_26">A powerful example (Scalar subquery)</h2>

<p><img src="media/15781966422187/15782134496785.jpg" alt="" style="width:431px;"/></p>

<h2 id="toc_27">Correlated Query</h2>

<p>When comparing within a subdivided group, you need to use a correlated subquery. </p>

<p>right:<br/>
<img src="media/15781966422187/15782142676868.jpg" alt="" style="width:428px;"/></p>

<p>wrong:<br/>
<img src="media/15781966422187/15782142394855.jpg" alt="" style="width:435px;"/></p>

<h1 id="toc_28">Chapter 6 Colorful Functions</h1>

<h2 id="toc_29">Recall questions</h2>

<ol>
<li>How can you use CASE to transpose row and column?</li>
<li>What are Predicates?</li>
<li>How many categories of functions are there?</li>
</ol>

<h2 id="toc_30">Categories of Functions</h2>

<ul>
<li>Arithmetic ~
<ul>
<li>ABS()</li>
<li>MOD(n, p)</li>
</ul></li>
<li>String ~
<ul>
<li>REPLACE(object, string_be_replaced, string_to_replace)</li>
<li>SUBSTRING(object, FROM start_position FOR num_string_to_slice)</li>
</ul></li>
<li>Date ~
<ul>
<li>CURRENT_DATE</li>
<li>CURRENT_TIME</li>
<li>CURRENT_TIMESTMAP</li>
<li>EXTRACT(element FROM date)</li>
</ul></li>
<li>Convert ~
<ul>
<li>CAST(object AS data_type)</li>
<li>COALESCE(data1, data2, data3, ...)
<ul>
<li>Return first non-NULL value starting from the left</li>
</ul></li>
</ul></li>
<li>Aggregation ~ (only five)</li>
</ul>

<p>NB! Almost all functions return NULL when input parameter is NULL.</p>

<h2 id="toc_31">Predicates (which returns boolean-like values)</h2>

<ul>
<li>LIKE </li>
<li>BETWEEN</li>
<li>IS NULL, IS NOT NULL</li>
<li>IN</li>
<li>EXISTS
<ul>
<li>Often EXISTS&#39;S parameter is correlated subquery</li>
</ul></li>
</ul>

<p>NB! </p>

<ol>
<li>In most cases, NULL rows won&#39;t be selected when using predicates</li>
<li>Don&#39;t include NULL in NOT IN&#39;s parameter, otherwise there won&#39;t show any results</li>
</ol>

<p><img src="media/15781966422187/15782175535709.jpg" alt="" style="width:390px;"/></p>

<h2 id="toc_32">Use Case to transpose</h2>

<p><img src="media/15781966422187/15782171009173.jpg" alt="" style="width:444px;"/></p>

<h1 id="toc_33">Chapter 7 Set Operation</h1>

<h2 id="toc_34">Recall questions</h2>

<p><img src="media/15781966422187/15782281363736.jpg" alt="" style="width:406px;"/></p>

<h2 id="toc_35">Row direction join (axis = 1)</h2>

<ul>
<li>UNION</li>
<li>INTERSECT (same grammar with UNION)</li>
<li>UNION ALL</li>
<li>INTERSECT ALL</li>
<li>EXCEPT</li>
</ul>

<h2 id="toc_36">Column direction join (axis = 0)</h2>

<ul>
<li>INNER JOIN</li>
<li>LEFT/RIGHT OUT JOIN</li>
<li>CROSS JOIN</li>
</ul>

<h1 id="toc_37">Chapter 8 Advanced Topics: Window Function &amp; Grouping Operator</h1>

<h2 id="toc_38">Recall questions</h2>

<p><img src="media/15781966422187/15782308774375.jpg" alt="" style="width:420px;"/></p>

<p>Window Function can only be used in SELECT clause, not in WHERE and GROUP BY because it executes on the result of WHERE or GROUP BY.</p>

<h2 id="toc_39">Categories of Window Function</h2>

<ul>
<li>Aggregation function(SUM, AVG, COUNT, MAX, MIN)</li>
<li>Dedicated window function(RANK, DENSE, ROW, NUMBER)</li>
</ul>

<h2 id="toc_40">Features of Window Function</h2>

<ul>
<li>Group data (PARTITION BY is not necessary, you can treat the whole table as a group)</li>
<li>Order data</li>
<li>But not aggregate data (therefore, result has no less rows)</li>
</ul>

<h2 id="toc_41">Aggregation window function (attention!)</h2>

<p>Current record as benchmark to calculate stats is the biggest feature of Aggregation of window function.<br/>
<img src="media/15781966422187/15782293559980.jpg" alt="" style="width:435px;"/><br/>
<img src="media/15781966422187/15782293654751.jpg" alt="" style="width:434px;"/><br/>
<img src="media/15781966422187/15782293869397.jpg" alt="" style="width:448px;"/></p>

<h2 id="toc_42">Moving average (how to use Frame)</h2>

<ul>
<li>PRECEDING</li>
<li>FOLLOWING</li>
</ul>

<p><img src="media/15781966422187/15782298849104.jpg" alt="" style="width:430px;"/></p>

<h2 id="toc_43">Grouping operator</h2>

<ul>
<li><p>ROLLUP (n+1)</p>
<ul>
<li>From small aggregation to large aggregation</li>
<li>GROUPING Function to identify different NULLs
<img src="media/15781966422187/15782302348888.jpg" alt="" style="width:428px;"/>
<img src="media/15781966422187/15782302628705.jpg" alt="" style="width:439px;"/></li>
</ul></li>
<li><p>CUBE (2<sup>n)</sup><br/>
<img src="media/15781966422187/15782307494627.jpg" alt="" style="width:364px;"/></p></li>
<li><p>GROUPING SETS</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Weekly Goal / Review: 12/30 - 01/05 Dec 2019]]></title>
    <link href="https://qumino2.github.io/weekly-goal--review-1230--0105.html"/>
    <updated>2019-12-29T18:53:37+08:00</updated>
    <id>https://qumino2.github.io/weekly-goal--review-1230--0105.html</id>
    <content type="html"><![CDATA[
<h1 id="toc_0">Highlights</h1>

<ul>
<li>Visited Guangzhou to meet two friends Wenjie and Chunxiao. (I was listening Steve&#39;s audio program and encouraged to take immediate action and do something different. Therefore, I booked the ticket at the last day of 2019.)</li>
<li>Enrolled in Steve&#39;s new course Stature. (I will journal about my progress along the way on this blog)</li>
</ul>

<h1 id="toc_1">Goals</h1>

<p>✔️ Finish application for online CS programme</p>

<p>✔️ Output notes blog for <em>SQL基础教程</em> <br/>
-<br/>
ps: what I think makes good notes: </p>

<ul>
<li>Questions for recall</li>
<li>Categorized notes for references</li>
</ul>

<h1 id="toc_2">Focus habit</h1>

<p>✖️ <strong>Swimming every morning</strong> 4/7</p>

<p><strong>Lesson learned:</strong><br/>
Prioritize your main goal and habit so it won&#39;t slip   so naturally.</p>

<p>I could say the reason is that I had a trip to another city, but actually I brought my swimming suite there and planned to stick to my habit. The thing is that I did not purposely prioritize swimming habit over hanging out with friends and so it felt so nature that I don&#39;t have time to stick to my habit.</p>

<h1 id="toc_3">Media and Events</h1>

<h3 id="toc_4">Events</h3>

<ul>
<li>Had a trip to Guangzhou and visited <a href="https://www.codelab.club/">Codeclub</a> </li>
</ul>

<h3 id="toc_5">Books</h3>

<p>None </p>

<h3 id="toc_6">Movies</h3>

<ul>
<li>Free Solo</li>
</ul>

]]></content>
  </entry>
  
</feed>
